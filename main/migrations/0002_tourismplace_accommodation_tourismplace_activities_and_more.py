# Generated by Django 5.2.4 on 2025-09-18 18:18

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='tourismplace',
            name='accommodation',
            field=models.TextField(blank=True, help_text='Accommodation options'),
        ),
        migrations.AddField(
            model_name='tourismplace',
            name='activities',
            field=models.TextField(blank=True, help_text='Activities available at this place'),
        ),
        migrations.AddField(
            model_name='tourismplace',
            name='altitude',
            field=models.IntegerField(blank=True, help_text='Altitude in meters', null=True),
        ),
        migrations.AddField(
            model_name='tourismplace',
            name='contact_info',
            field=models.CharField(blank=True, max_length=500),
        ),
        migrations.AddField(
            model_name='tourismplace',
            name='cultural_importance',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='tourismplace',
            name='difficulty_level',
            field=models.CharField(blank=True, choices=[('easy', 'Easy'), ('moderate', 'Moderate'), ('difficult', 'Difficult')], max_length=20),
        ),
        migrations.AddField(
            model_name='tourismplace',
            name='historical_significance',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='tourismplace',
            name='is_featured',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='tourismplace',
            name='local_food',
            field=models.TextField(blank=True, help_text='Local food specialties'),
        ),
        migrations.AddField(
            model_name='tourismplace',
            name='photography_tips',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='tourismplace',
            name='rating',
            field=models.DecimalField(decimal_places=1, default=4.0, max_digits=3),
        ),
        migrations.AddField(
            model_name='tourismplace',
            name='safety_tips',
            field=models.TextField(blank=True, help_text='Safety tips for visitors'),
        ),
        migrations.AddField(
            model_name='tourismplace',
            name='weather_info',
            field=models.TextField(blank=True, help_text='Weather information'),
        ),
        migrations.AddField(
            model_name='tourismplace',
            name='website',
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='date_of_birth',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='interests',
            field=models.CharField(blank=True, help_text='Comma-separated interests', max_length=500),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='profile_picture',
            field=models.ImageField(blank=True, null=True, upload_to='profiles/'),
        ),
        migrations.AlterField(
            model_name='tourismplace',
            name='place_type',
            field=models.CharField(choices=[('eco', 'Eco Tourism'), ('cultural', 'Cultural Tourism'), ('adventure', 'Adventure Tourism'), ('religious', 'Religious'), ('historical', 'Historical'), ('wildlife', 'Wildlife'), ('waterfall', 'Waterfall'), ('hill_station', 'Hill Station'), ('lake', 'Lake'), ('tribal', 'Tribal Culture')], max_length=20),
        ),
        migrations.CreateModel(
            name='AccommodationBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel_name', models.CharField(max_length=200)),
                ('check_in_date', models.DateField()),
                ('check_out_date', models.DateField()),
                ('guests_count', models.IntegerField()),
                ('contact_phone', models.CharField(max_length=15)),
                ('special_requests', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('booking_reference', models.CharField(blank=True, max_length=20, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.tourismplace')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ItineraryPlace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_number', models.IntegerField()),
                ('visit_time', models.TimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.tourismplace')),
            ],
            options={
                'ordering': ['day_number', 'visit_time'],
            },
        ),
        migrations.CreateModel(
            name='PlacePhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='place_photos/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_approved', models.BooleanField(default=False)),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='main.tourismplace')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='PlaceReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')])),
                ('title', models.CharField(max_length=200)),
                ('review_text', models.TextField()),
                ('visit_date', models.DateField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_verified', models.BooleanField(default=False)),
                ('helpful_count', models.IntegerField(default=0)),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='main.tourismplace')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('place', 'user')},
            },
        ),
        migrations.CreateModel(
            name='TravelItinerary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('places', models.ManyToManyField(through='main.ItineraryPlace', to='main.tourismplace')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='itineraryplace',
            name='itinerary',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.travelitinerary'),
        ),
        migrations.DeleteModel(
            name='ChatMessage',
        ),
    ]
